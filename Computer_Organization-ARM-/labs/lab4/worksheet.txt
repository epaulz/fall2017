/*
	Eric Paulz
	CPSC 2311-003
	Lab 4
*/

1. What is the address (in hexadecimal) of the first and last instruction in the loop?
	FIRST: 0x00008d1c	
	LAST:  0x00008d5c

2. Is the loop of the "while(condition)-do", "repeat-until(condition)", or "do-while(condition)" form?
	do-while(condition)

3. Do the values of 'x' increase or decrease?
	increasing by 1 


4. In the form of "b *ADDRESS", what is the command to set a breakpoint on the line where you can observe the new value of 'y' after it is calcualted? Actually use "print $r0" to check and make sure the register you think is 'y' has been updated and has the correct value.
	b 33


5. What two gdb commands can you enter so that at each and every step, gdb will print both the decimal and hexadecimal form of the value 'y'?
	display/x $r3
	display/d $r3


6. The loop as written only calculates the value of 'y' for the values of 'x' between 0 and 9. It should calculate the value of 'y' for all values of 'x' between 0 and 10. Why does the loop stop at 9 and what change would fix it?
	When the value in r3 is 9, it will be compared to 10 and the result is -1.  Therefore, blt will be true
	and it will branch out of the loop.  We need to change blt to ble so that the loop will run again when
	r3 is 10.

7. Correct the code in "loop.s", assemble and step through the program again in gdb. Fill in the following table:

register        register                register
   x               y                       y
(counter)       (decimal)               (hexadecimal)

   0            7__________             0x7 __________

   1            -1__________            0xffffffff  __________

   2            -9__________            0xfffffff7  __________

   3            -17__________           0xffffffef   __________

   4            -25__________           0xffffffe7   __________

   5            -33__________           0xffffffdf   __________

   6            -41__________           0xffffffd7   __________

   7            -49__________           0xffffffcf   __________

   8            -57__________           0xffffffc7  __________

   9            -65__________           0xffffffbf   __________

  10            -73__________           0xffffffb7   __________
  

=====================
 Octal Dump Questions
=====================

8. What type of data is in the source file?



9. What type of data is in the executable?



BONUS:

10. Use the directory list command (ls -l) to determine the size of your source file (loop.s) and the executable (loop). How do the files compare in size? Which is bigger? In order to get any credit you must also explain why it is bigger.



